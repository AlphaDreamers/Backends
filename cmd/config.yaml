app:
  env: "production"

log:
  dir: "./logs"
  file: "./logs/app.log"
  max_size: 10
  max_backups: 3
  max_age: 28
  compress: true
  pretty_print: true

limiter:
  max_requests: 100
  expiration: 1m

client:
  timeout: 30s

aws:
  cognito:
    client-id: "7qllcjjcq7p506kq88vkfiu92g"
    user-pool-id: "us-east-1_86rLqWz2S"
    secret-hash: "pdiECwxTn+tgeXBkCoYQyA=="
    token-signing-key-url: "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_86rLqWz2S/.well-known/jwks.json"
    client-secret: "1ipuga7399127snjbbgletfpr25lk6hleucb5fptn6nvrefn40ri"
    jwt-issuer-url: "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_86rLqWz2S"
  config:
    url: "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_86rLqWz2S/.well-known/openid-configuration"
  rds:
    dsn: "host=database-1.cm9ewocwci8f.us-east-1.rds.amazonaws.com user=postgres password=Swanhtetaungphyo dbname=postgres port=5432 sslmode=require"
    local: "host=postgres user=postgres password=postgres dbname=appDatabase sslmode=disable"

auth:
  port: "30011"
  name: "AuthServer"
  header: "auth-cognito"
  disableStartupMessage: false
  prefork: false
  caseSensitive: true
  strictRouting: true
  allowed-origin: "*"
  allowHeaders: "Origin, Content-Type, Accept, X-Csrf-Token"
  allowMethods: "GET, POST, PUT, DELETE, OPTIONS"
  allowCredentials: true
  read_timeout: "10s"
  write_timeout: "10s"
  idle_timeout: "120s"
  certificate:
    cert: "/certificates/cert.pem"
    key: "/certificates/key.pem"

chat:
  port: "30012"
  name: "ChatServer"
  header: "chat-server"
  disableStartupMessage: false
  prefork: false
  caseSensitive: true
  strictRouting: true
  allowed-origin: "*"
  allowHeaders: "Origin, Content-Type, Accept"
  allowMethods: "GET, POST, PUT, DELETE, OPTIONS"
  allowCredentials: true
  read_timeout: "10s"
  write_timeout: "10s"
  idle_timeout: "120s"
  certificate:
    cert: "/certificates/cert.pem"
    key: "/certificates/key.pem"

gig:
  port: "8001"
  name: "GigServer"
  header: "gig-server"
  disableStartupMessage: false
  prefork: false
  caseSensitive: true
  strictRouting: true
  allowed-origin: "*"
  allowHeaders: "Origin, Content-Type, Accept, X-Csrf-Token"
  allowMethods: "GET, POST, PUT, DELETE, OPTIONS"
  allowCredentials: true
  read_timeout: "10s"
  write_timeout: "10s"
  idle_timeout: "120s"
  certificate:
    cert: "/certificates/cert.pem"
    key: "/certificates/key.pem"

wallet:
  port: "8002"
  name: "WalletServer"
  header: "wallet-server"
  disableStartupMessage: false
  prefork: false
  caseSensitive: true
  strictRouting: true
  allowed-origin: "*"
  allowHeaders: "Origin, Content-Type, Accept"
  allowMethods: "GET, POST, PUT, DELETE, OPTIONS"
  allowCredentials: true
  read_timeout: "10s"
  write_timeout: "10s"
  idle_timeout: "120s"
  certificate:
    cert: "/certificates/cert.pem"
    key: "/certificates/key.pem"

order:
  port: "8003"
  name: "OrderServer"
  header: "order-server"
  disableStartupMessage: false
  prefork: false
  caseSensitive: true
  strictRouting: true
  allowed-origin: "*"
  allowHeaders: "Origin, Content-Type, Accept, X-Csrf-Token"
  allowMethods: "GET, POST, PUT, DELETE, OPTIONS"
  allowCredentials: true
  read_timeout: "10s"
  write_timeout: "10s"
  idle_timeout: "120s"
  certificate:
    cert: "/certificates/cert.pem"
    key: "/certificates/key.pem"

user:
  port: "30016"
  name: "UserServer"
  header: "user-server"
  disableStartupMessage: false
  prefork: false
  caseSensitive: true
  strictRouting: true
  allowed-origin: "*"
  allowHeaders: "Origin, Content-Type, Accept, X-Csrf-Token"
  allowMethods: "GET, POST, PUT, DELETE, OPTIONS"
  allowCredentials: true
  read_timeout: "10s"
  write_timeout: "10s"
  idle_timeout: "120s"
  certificate:
    cert: "/certificates/cert.pem"
    key: "/certificates/key.pem"

database:
  host: postgres
  port: 5432
  user: postgres
  password: postgres  # Make sure this matches your actual PostgreSQL password
  name: appDatabase
  sslmode: disable
  max_attempts: 5
  max_idle_conns: 10
  max_open_conns: 100
  conn_max_lifetime: 1h


redis:
  addr: redis
  password: ""
  db: ""